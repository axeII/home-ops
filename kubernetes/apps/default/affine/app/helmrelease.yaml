---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app affine
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      affine:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 17
            env:
              INIT_POSTGRES_UTF8: "true"
            envFrom: &envFrom
              - secretRef:
                  name: affine-secret
          init-config:
            # dependsOn: init-db
            image:
              repository: ghcr.io/toeverything/affine-graphql
              tag: stable-0ab8655@sha256:b461dd09b968bd2f067e98ed3c4988f4711dd811df7624f19d53c899061c4347
            command: ["/bin/sh", "-c"]
            args:
              - |
                node ./scripts/self-host-predeploy.js
            envFrom: &envFrom
              - secretRef:
                  name: affine-secret
            resources:
              requests:
                cpu: 20m
              limits:
                memory: 1Gi
        containers:
          app:
            image:
              repository: ghcr.io/toeverything/affine-graphql
              tag: stable-0ab8655@sha256:b461dd09b968bd2f067e98ed3c4988f4711dd811df7624f19d53c899061c4347
            env:
              TZ: "${TIMEZONE}"
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
                path: /
                port: &port 3010
              readiness:
                enabled: true
                path: /
                port: *port
            resources:
              requests:
                cpu: 25m
                memory: 105M
        pod:
          securityContext:
            # TODO: non root should be done oneday
            runAsUser: 0
    service:
      app:
        controller: affine
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-nginx-ingress.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://$host/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host nt.juno.moe
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      workspace:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /root/.affine
