---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app affine
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      affine:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: affine-secret
          init-config:
            image:
              repository: ghcr.io/toeverything/affine-graphql
              tag: stable-0ab8655@sha256:b461dd09b968bd2f067e98ed3c4988f4711dd811df7624f19d53c899061c4347
            command: ["/bin/sh", "-c"]
            args:
              - |
                node ./scripts/self-host-predeploy.js
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/toeverything/affine-graphql
              tag: stable-0ab8655@sha256:b461dd09b968bd2f067e98ed3c4988f4711dd811df7624f19d53c899061c4347
            env:
              TZ: "${TIMEZONE}"
              REDIS_SERVER_HOST: dragonfly.database.svc.cluster.local
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
                path: /
                port: &port 3010
              readiness:
                enabled: true
                path: /
                port: *port
            resources:
              requests:
                cpu: 25m
                memory: 105M
        pod:
          securityContext:
            runAsUser: 0
            # runAsGroup: 1000
            # runAsNonRoot: true
            # fsGroup: 1000
            # fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: affine
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: "nt.juno.moe"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      workspace:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /root/.affine
